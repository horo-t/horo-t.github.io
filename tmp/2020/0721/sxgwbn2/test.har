{
  "log": {
    "entries": [
      {
        "request": {
          "method": "GET",
          "url": "https://sxg-demo.horo.jp/load_iframe.js",
          "headers": []
        },
        "response": {
          "status": 200,
          "headers": [
            {
              "name": "Content-type",
              "value": "text/javascript"
            }
          ],
          "content": {
            "text": "(async () => {\n  window.time_2 = performance.now();\n  const links = document.getElementsByTagName('link')\n  const script_url = 'https://sxg-demo.horo.jp/load_iframe.js';\n  const page_url = 'https://sxg-demo.horo.jp/hello.html';\n  window.addEventListener('message', (e) => {\n    console.log('on msg');    window.time_3 = performance.now();\n    log('click to start JS: ' + (window.time_2 - window.time_1) + ' ms');\n    log('click to message: ' + (window.time_3 - window.time_1) + ' ms');\n    log('iframe creation: ' + (window.time_x2 - window.time_x1) + ' ms');\n  });\n  for (let i = 0;i < links.length; ++i) {\n    if (links[i].rel === 'webbundle' &&\n        links[i].resources.contains(script_url)) {\n      links[i].resources.add(page_url);\n    }\n  }\n  (await window.iframe_for_test).src = page_url;\n})();"
          }
        }
      },
      {
        "request": {
          "method": "GET",
          "url": "https://sxg-demo.horo.jp/hello.html",
          "headers": []
        },
        "response": {
          "status": 200,
          "headers": [
            {
              "name": "Content-type",
              "value": "application/signed-exchange;v=b3"
            },
            {
              "name": "X-content-type-options",
              "value": "nosniff"
            }
          ],
          "content": {
            "text": "c3hnMS1iMwAAI2h0dHBzOi8vc3hnLWRlbW8uaG9yby5qcC9oZWxsby5odG1sABB+AACUbGFiZWw7Y2VydC1zaGEyNTY9Kkh0MnY0cVYxVHVybE8wQUZFWUVnd2VWeXM4ZDBvSHNaMDJtOHZmbmhsNlU9KjtjZXJ0LXVybD0iZGF0YTphcHBsaWNhdGlvbi9jZXJ0LWNoYWluK2Nib3I7YmFzZTY0LGcyZnduNU9jNHB1VG9tUmpaWEowV1FTUk1JSUVqVENDQTNXZ0F3SUJBZ0lTQlBIa1RUa2xwdDY1ck5DRkt1ZlFGOGl5TUEwR0NTcUdTSWIzRFFFQkN3VUFNRW94Q3pBSkJnTlZCQVlUQWxWVE1SWXdGQVlEVlFRS0V3MU1aWFFuY3lCRmJtTnllWEIwTVNNd0lRWURWUVFERXhwTVpYUW5jeUJGYm1OeWVYQjBJRUYxZEdodmNtbDBlU0JZTXpBZUZ3MHlNREEzTURNd05qQTRNalZhRncweU1ERXdNREV3TmpBNE1qVmFNQnN4R1RBWEJnTlZCQU1URUhONFp5MWtaVzF2TG1odmNtOHVhbkF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVJkd3UvaUl6VmNSeXhKcDRSYTJVejRCMHZsVWxLenhYSjdVZ2N2WmtYODVXU09DekFxOWdMb3pQN3A3TlpMdmNrUGJlT3lsZVAyMnhKZ1lsRDJqcGNVbzRJQ1pUQ0NBbUV3RGdZRFZSMFBBUUgvQkFRREFnZUFNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlQyWUNoMXVHM2sxYVZPK0JnYmdFWDJrZ3hiVWpBZkJnTlZIU01FR0RBV2dCU29TbXBqQkgzZHV1YlJPYmVtUldYdjg2anNvVEJ2QmdnckJnRUZCUWNCQVFSak1HRXdMZ1lJS3dZQkJRVUhNQUdHSW1oMGRIQTZMeTl2WTNOd0xtbHVkQzE0TXk1c1pYUnpaVzVqY25sd2RDNXZjbWN3THdZSUt3WUJCUVVITUFLR0kyaDBkSEE2THk5alpYSjBMbWx1ZEMxNE15NXNaWFJ6Wlc1amNubHdkQzV2Y21jdk1Cc0dBMVVkRVFRVU1CS0NFSE40Wnkxa1pXMXZMbWh2Y204dWFuQXdUQVlEVlIwZ0JFVXdRekFJQmdabmdRd0JBZ0V3TndZTEt3WUJCQUdDM3hNQkFRRXdLREFtQmdnckJnRUZCUWNDQVJZYWFIUjBjRG92TDJOd2N5NXNaWFJ6Wlc1amNubHdkQzV2Y21jd2dnRUVCZ29yQmdFRUFkWjVBZ1FDQklIMUJJSHlBUEFBZGdEd2xhUlo4Z0RSZ2tBUUxTK1RpSTZ0Uy80ZFIrT1o0ZEEwcHJDb3FvNnljd0FBQVhNVGdVUU9BQUFFQXdCSE1FVUNJRDZNdEN2YjhLRHptUy9nNWNBb3pXZS9Vclc0ektrb1F3WG1HS1hQeEZMNEFpRUF2WEp4U0xndm9ldDloZENkL2lXRG5kRzB3Z25rTzZRQTE5c1VDMGVQeHhZQWRnQ3lIZ1hNaTZMTmlpQk9oMmI1SzdtS0pTQm5hOXI2Y09leVNWTXQ3NHVRWGdBQUFYTVRnVVFWQUFBRUF3QkhNRVVDSVFESTV2VFJaZmZWSEtTQnRhakN1UEh1OUlhcE5NSytiUlFVTG1wYTc4N3lOd0lnRXNwVE5DUTlYTGUweE43N0hEQkhLM1ZSVC90RUtKTEpjZzBxN3h5WmtCWXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRmhlSkV2ZXpQcmdQSHVwVXoxWCtJSUQxK2N2cE1yVGt1VFduT3VwRjBCMzI3dzgzNzQ5U0N4L1VScXZ5bmVrakpTUGVVSzU5R1dBR1ZES3pYcjh4dWkxaHJ2R1lEdjM1Y0Q5RGJCTEJJY1RWcSsrZWQ1UGtEUThaMmpYeWxoY0U0WXRkd1VqRTFDK3I0UmVJVlFxUVFFakN6a1ZqTkI2QWdJSUczaVFRcDI3QncwOHR2akFqMWN1bVVIaWo0TFVSQTN4WWFjYUNhaXpsYnRkam5sK3RMdVZUK25vTnJoUjN0WFI2RXpkNzF1cHZVeFpsQUtMeUt4Q0FWWDVyTlhWcE9ZYWJHUFV6N1BHNEZySDl0S3RrRkFZUUMwdFkzNHJ5Tmp1bU44Smc2NmV3NkUyaGl5YkV1ekQxcDB5SmdDUXJpU0E0bW4rMDA1VWtXNTBpeTFJMnlGa2IyTnpjRmtDRHpDQ0Fnc0tBUUNnZ2dJRU1JSUNBQVlKS3dZQkJRVUhNQUVCQklJQjhUQ0NBZTB3Z2RhaFREQktNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ2hNTlRHVjBKM01nUlc1amNubHdkREVqTUNFR0ExVUVBeE1hVEdWMEozTWdSVzVqY25sd2RDQkJkWFJvYjNKcGRIa2dXRE1ZRHpJd01qQXdOekl4TURjeE1EQXdXakIxTUhNd1N6QUpCZ1VyRGdNQ0dnVUFCQlIrNW1ybmNwcXovUGlpSUdSc0ZxRXRZSEVJWFFRVXFFcHFZd1I5M2JybTBUbTNwa1ZsNy9PbzdLRUNFZ1R4NUUwNUphYmV1YXpRaFNybjBCZklzb0FBR0E4eU1ESXdNRGN5TVRBM01EQXdNRnFnRVJnUE1qQXlNREEzTWpnd056QXdNREJhTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBNlVWelJVOHFySXpFdFI4VU9GSkFQWERyWTh1ZnRxZkNCSHZlS1NRSnYwZlFJQXdtZ3V5bHdmUVJSVlAwamduRFJVZit4WUg3UGhENitvOUxacUNwVkROTTZ1alZvdzVzOFdJVTQ3NEx3bmdjMENkUVdpNmFJWll0WDAvdTV4b0U4ano3WDBXclk1VC9XbG9PTnZMRG02UWY1cHdkOEk4Y2x0dHBMLzFDeEJPbDNZbmY5OG9LcW5WcWVwYTNNZ090WmZVWEdIbENCYUZKNnh1MkRxY1lXbC9FZUNxdnhHamp4Yk0wWTQxbVVLMGw3RGg5UWF4ak9hZlg5MFNGMWRIQUNDQmU3NG1uMjZmRDM5VkJnTWp6RlB4MWF5VndSMUIyRkVYcGlwNGtKZmo4Ujk2NEEwYVkvUXBhY3pleDZoQjJUL0pVdXZTWE53U0RFczgyT0VDWkFvV1JqWlhKMFdRU1dNSUlFa2pDQ0EzcWdBd0lCQWdJUUNnRkJRZ0FBQVZPRmMyb0xoZXluQ0RBTkJna3Foa2lHOXcwQkFRc0ZBREEvTVNRd0lnWURWUVFLRXh0RWFXZHBkR0ZzSUZOcFoyNWhkSFZ5WlNCVWNuVnpkQ0JEYnk0eEZ6QVZCZ05WQkFNVERrUlRWQ0JTYjI5MElFTkJJRmd6TUI0WERURTJNRE14TnpFMk5EQTBObG9YRFRJeE1ETXhOekUyTkRBME5sb3dTakVMTUFrR0ExVUVCaE1DVlZNeEZqQVVCZ05WQkFvVERVeGxkQ2R6SUVWdVkzSjVjSFF4SXpBaEJnTlZCQU1UR2t4bGRDZHpJRVZ1WTNKNWNIUWdRWFYwYUc5eWFYUjVJRmd6TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuTk1NOEZybExrZTNjbDAzZzdOb1l6RHExelVtR1NYaHZiNDE4WENTTDdlNFMwRUZxNm1lTlFoWTdMRXF4R2lIQzZQamRlVG04NmRpY2JwNWdXQWYxNUdhbi9QUWVHZHh5R2tPbFpIUC91YVo2V0E4U014K3lrMTNFaVNkUnh0YTY3bnNIamNBSEp5c2U2Y0Y2czVLNjcxQjVUYVl1Y3Y5YlR5V2FOOGpLa0tRRElaMFo4aC9wWnE0VW1FVUV6OWw2WUtIeTl2NkRsYjJob256aFQrWGhxK3czQnJ2YXcyVkZuM0VLNkJsc3BrRU5uV0FhNnhLOHh1UVNYZ3ZvcFpQS2lBbEtRVEdkTURRTWMyUE1UaVZGcnFvTTdoRDhiRWZ3ekIvb25reEV6MHROdmpqL1BJemFyazVNY1d2eEkwTkhXUVdNNnI2aENtMjFBdkEySDNEa3dJREFRQUJvNElCZlRDQ0FYa3dFZ1lEVlIwVEFRSC9CQWd3QmdFQi93SUJBREFPQmdOVkhROEJBZjhFQkFNQ0FZWXdmd1lJS3dZQkJRVUhBUUVFY3pCeE1ESUdDQ3NHQVFVRkJ6QUJoaVpvZEhSd09pOHZhWE55Wnk1MGNuVnpkR2xrTG05amMzQXVhV1JsYm5SeWRYTjBMbU52YlRBN0JnZ3JCZ0VGQlFjd0FvWXZhSFIwY0RvdkwyRndjSE11YVdSbGJuUnlkWE4wTG1OdmJTOXliMjkwY3k5a2MzUnliMjkwWTJGNE15NXdOMk13SHdZRFZSMGpCQmd3Rm9BVXhLZXhwSHNzY2ZyYjRVdVFkZi9FRldDRmlSQXdWQVlEVlIwZ0JFMHdTekFJQmdabmdRd0JBZ0V3UHdZTEt3WUJCQUdDM3hNQkFRRXdNREF1QmdnckJnRUZCUWNDQVJZaWFIUjBjRG92TDJOd2N5NXliMjkwTFhneExteGxkSE5sYm1OeWVYQjBMbTl5WnpBOEJnTlZIUjhFTlRBek1ER2dMNkF0aGl0b2RIUndPaTh2WTNKc0xtbGtaVzUwY25WemRDNWpiMjB2UkZOVVVrOVBWRU5CV0RORFVrd3VZM0pzTUIwR0ExVWREZ1FXQkJTb1NtcGpCSDNkdXViUk9iZW1SV1h2ODZqc29UQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEzVFBYRWZOaldEamRHQlg3Q1ZXK2RsYTVjRWlsYVVjbmU4SWtDSkx4V2g5S0VpazNKSFJSSEdKb3VNMlZjR2ZsOTZTOFRpaFJ6WnZvcm9lZDZ0aTZXcUVCbXR6dzNXb2RhdGcrVnlPZXBoNEVZcHIvMXdYS3R4OC93QXBJdkpTd3RtVmk0TUZVNWFNcXJTREU2ZWE3M01qMnRjTXlvNWpNZDZqbWVXVUhLOHNvL2pvV1VvSE9VZ3d1WDRQbzFRWXorM2RzemtEcU1wNGZrbHhCd1hSc1cxMEtYelBNVForc09QQXZleXhpbmRtamtXOGxHeStRc1JsR1BmWitHNlo2aDdtamVtMFkraVdsa1ljVjRQSVdMMWl3Qmk4c2FDYkdTNWpOMnA4TStYK1E3VU5LRWtST2IzTjZLT3FrcW01N1RIMkgzZURKQWtTbmg2L0RORnUwUWc9PSI7ZGF0ZT0xNTk1MzM2MDgwO2V4cGlyZXM9MTU5NTk0MDg4MDtpbnRlZ3JpdHk9ImRpZ2VzdC9taS1zaGEyNTYtMDMiO3NpZz0qTUVZQ0lRRFlIbzR3YTh4cHFSUktHR2hwWFFJVDRLWXEvUzdDRk1xc1g3R1FtbFdpSFFJaEFNTFMvbDArOW0vTzg2Zk00MjRQYkFHSGRMbTA1Qk5QZnliK1c5ZjNIVzhPKjt2YWxpZGl0eS11cmw9Imh0dHBzOi8vc3hnLWRlbW8uaG9yby5qcC9oZWxsby5odG1sLnZhbGlkaXR5IqRGZGlnZXN0WDltaS1zaGEyNTYtMDM9U2h2QzdMc3l0TEdQbzB3enFrclRiN1hsM0lVMDB4ai91RmdZblZ2aGtkdz1HOnN0YXR1c0MyMDBMY29udGVudC10eXBlWBh0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLThQY29udGVudC1lbmNvZGluZ0xtaS1zaGEyNTYtMDMAAAAAAAAQADxoZWFkPgo8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MSI+CjwvaGVhZD4KPHNjcmlwdD4Kd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7CiAgICBjb25zb2xlLmxvZygnc2VuZCBtc2cnKTsgIHdpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2UoJycsICcqJyk7Cn0pOwo8L3NjcmlwdD4KPGgxPkhlbGxvIFNpZ25lZCBFeGNoYW5nZTwvaDE+",
            "encoding": "base64"
          }
        }
      }
    ]
  }
}